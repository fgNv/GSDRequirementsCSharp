<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accessPermissionsForOtherUsersAreGrantedByProject" xml:space="preserve">
    <value>Access permissions for other users are granted by project.</value>
  </data>
  <data name="afterSubmitingTheRegistrationDataYouWillBeAbleToAuthenticateAndManageProjects" xml:space="preserve">
    <value>After submiting the registration data, you will be able to authenticate and manage projects.</value>
  </data>
  <data name="andWhenInsertingNewDataTheFirstLanguageAddedWillBeTheOneSelected" xml:space="preserve">
    <value>Besides, when inserting new data, the first language added will be the one selected.</value>
  </data>
  <data name="artifactsAreRequirementsClassDiagramsAndUseCaseDiagrams" xml:space="preserve">
    <value>Artifacts are requirements, class diagrams and use case diagrams.</value>
  </data>
  <data name="beforeYouCanManageProjectsAndArtifactsYouMustRegister" xml:space="preserve">
    <value>Before you can manage projects and artifacts, you must register.</value>
  </data>
  <data name="byDoingSoTranslationsOfTheDataWillBeDisplayedIfAvailableInsteadOfTheOriginalData" xml:space="preserve">
    <value>By doing so, translations in the selected language will be displayed if available instead of the original data</value>
  </data>
  <data name="forThisPurposeAlmostAllDataInsertedCanHaveATranslatedVersion" xml:space="preserve">
    <value>For this porpose, almost all data inserted can have a translated version.</value>
  </data>
  <data name="gsdStandsForGlobalSoftwareDevelopmentInOtherWordsATeamWithMembersFromDifferentCountries" xml:space="preserve">
    <value>GSD Stands for Global Software Development, in other words, a team with members from different countries.</value>
  </data>
  <data name="isAToolForRequirementManagementAimedForGlobalTeams" xml:space="preserve">
    <value>is a tool for requirement management aimed for global teams.</value>
  </data>
  <data name="itsPossibleToChangeTheCurrentLanguagePressingTheChangeLanguageButtonInTheHeaderOfThePage" xml:space="preserve">
    <value>Its possible to change the current language pressing the change language button (globe) in the header of the page.</value>
  </data>
  <data name="PackagesThatContainsArtifacts" xml:space="preserve">
    <value>Packages that contains artifacts</value>
  </data>
  <data name="ProjectThatContainsPackages" xml:space="preserve">
    <value>Project that contains packages</value>
  </data>
  <data name="theProjectManagementIsAccessibleByTheManageProjectsAtThePageHeader" xml:space="preserve">
    <value>The project management is accessible by the manage projects button at the page header.</value>
  </data>
  <data name="theRequirementsManagementInThisToolIsMeantToBeMadeCollaboratively" xml:space="preserve">
    <value>The requirement management in this tool is meant to be made collaboratively.</value>
  </data>
  <data name="thisCanBeAccomplishedByPressingTheRegisterButtonBelowTheLoginForm" xml:space="preserve">
    <value>This can be accomplished by pressing the "Register" button below the login form.</value>
  </data>
  <data name="allActionsRelatedToProjectsCanBeDoneOnlyByItsOwnerWhichIsTheUserThatCreatedIt" xml:space="preserve">
    <value>All actions related to projects can be done only by its owner which is the user that created it.</value>
  </data>
  <data name="butItsPossibleToAddTranslationBeforeSubmittingTheData" xml:space="preserve">
    <value>but its possible to add translations before submitting the data.</value>
  </data>
  <data name="byClickingTheEditButtonYouWillBeAbleToEditAProject" xml:space="preserve">
    <value>By clicking the "Edit Button" (Pencil) in the project list, you will be able to edit a project.</value>
  </data>
  <data name="creatingANewProject" xml:space="preserve">
    <value>Creating a new project</value>
  </data>
  <data name="dataInsertedAtFirstWillReferTo" xml:space="preserve">
    <value>Data inserted at first will refer to </value>
  </data>
  <data name="editingAProject" xml:space="preserve">
    <value>Editing a project</value>
  </data>
  <data name="ifTheCurrentLanguageContainsAnObsoleteTranslation" xml:space="preserve">
    <value>if the current language contains an obsolete translation.</value>
  </data>
  <data name="itWillProvideAccessToAFormWhereItsPossibleToAddTheMissingTranslations" xml:space="preserve">
    <value>It will provide access to a form where it's possible to add the missing translations.</value>
  </data>
  <data name="nextToTheManageProjectButtonTheresTheProjectContextControlWhichDefinesWhichProjectDataIsDisplayed" xml:space="preserve">
    <value>Next to the "Manage Projects" button, there's the project context control, which defines which project data is displayed.</value>
  </data>
  <data name="pressingTheCreateProjectButtonInTheManageProjectScreenWillLeadYouToTheCreateProjectForm" xml:space="preserve">
    <value>Pressing the button "create project" (plus sign) in the "Manage Project Screen", will lead you to the create project form.</value>
  </data>
  <data name="removingAProject" xml:space="preserve">
    <value>Removing a project</value>
  </data>
  <data name="theAddTranslationButtonWillBeAvailableWhenThereAreObsoleteTranslationsToUpdateThem" xml:space="preserve">
    <value>The "Add Translation" button will be available when there are obsolete translations, to update them.</value>
  </data>
  <data name="theCurrentLanguage" xml:space="preserve">
    <value>the current language</value>
  </data>
  <data name="theTranslationsWillBeConsideredObsoleteAndAWarningInTheRowWillBeDisplayed" xml:space="preserve">
    <value>the translations will be considered obsolete, and a warning in the row will be displayed</value>
  </data>
  <data name="thisActionIsIrreversible" xml:space="preserve">
    <value>This action is irreversible</value>
  </data>
  <data name="toRemoveAProjectItsNecessaryToPressTheRemoveProjectButtonAndConfirmTheAction" xml:space="preserve">
    <value>To remove a project, it's necessary to press the "Remove Project" button (trash) in the project list, and confirm the action.</value>
  </data>
  <data name="whenCreatingAProjectAndNotProvidingTranslationForAllLanguagesAnAddTranslationButtonWillBeAvailable" xml:space="preserve">
    <value>When creating a project and not providing translation for all languages, an "Add Translation" Button (globe) will be available in the project list.</value>
  </data>
  <data name="whenEditingAProjectWithTranslationsButNotUpdatingThem" xml:space="preserve">
    <value>When editing a project with translations, but not updating them</value>
  </data>
  <data name="contextProject" xml:space="preserve">
    <value>Context project</value>
  </data>
  <data name="toManageAProjectPackagesArtifactsAndPermissionsItMustBeSelectedInTheContext" xml:space="preserve">
    <value>To manage a project packages, artifacts and permissions, it must be selected in the context.</value>
  </data>
  <data name="afterSelectingAProjectInTheContextMenuItemsForManagingTheProjectDataAppearInTheHeadersLeftSide" xml:space="preserve">
    <value>After selecting a project in the context, menu items for managing the project data appear in the header's left side.</value>
  </data>
  <data name="afterSelectingAProjectInTheContextThePackagesButtonWillBeDisplayedInTheHeadersLeftSide" xml:space="preserve">
    <value>After selecting a project in the context, the packages button will be displayed in the header's left side.</value>
  </data>
  <data name="byClickingTheEditButtonYouWillBeAbleToEditAPackage" xml:space="preserve">
    <value>By clicking the "Edit Package" button (pencil), in the package list, you will be able to edit a package.</value>
  </data>
  <data name="creatingANewPackage" xml:space="preserve">
    <value>Creating a new package</value>
  </data>
  <data name="dataInsertedAtFirstWillReferTotheCurrentLanguagebutItsPossibleToAddTranslationBeforeSubmittingTheData" xml:space="preserve">
    <value>Data inserted at first, will refer to the current language, but it's possible to add translation before submitting the data.</value>
  </data>
  <data name="editingPackages" xml:space="preserve">
    <value>Editing packages</value>
  </data>
  <data name="ifNoTranslationIsProvidedForAnyLanguageAfterwardsTheButtonAddTranslationWillBeAvailableForProvidingTheMissingTranslations" xml:space="preserve">
    <value>If no translation is provided for any language, afterwards the button "Add Translation" will be available in the list for providing missing translations.</value>
  </data>
  <data name="itWillLeadYouToTheManagePackagesPageWhereItsPossibleToCreateEditAndRemovePackages" xml:space="preserve">
    <value>It will lead you to the "Manage Packages" page, where it's possible to create, edit and remove packages.</value>
  </data>
  <data name="pressingTheCreatePackageButtonInTheManagePackageScreenWillLeadYouToTheCreatePackageForm" xml:space="preserve">
    <value>Pressing the "Create Package" button (plus sign) in the "Manage Package" screen, will lead you to the "Create Package" Form</value>
  </data>
  <data name="removingPackages" xml:space="preserve">
    <value>Removing packages</value>
  </data>
  <data name="toRemoveAPackageItsNecessaryToPressTheRemovePackageButtonAndConfirmTheAction" xml:space="preserve">
    <value>To remove a package, it's necessary to press the "Remove Package" button (trash) in the package list, and confirm the action.</value>
  </data>
  <data name="whenEditingAPackageWithTranslationsButNotUpdatingThem" xml:space="preserve">
    <value>When editing a package with translations, but not updating them</value>
  </data>
  <data name="addingNewVersionToRequirement" xml:space="preserve">
    <value>Adding new version to requirement</value>
  </data>
  <data name="afterAddingTheUsersAndDefiningTheirProfilesYouMustClickTheSaveButton" xml:space="preserve">
    <value>After adding the users and defining their profiles, you must click the "Save" button.</value>
  </data>
  <data name="afterSelectingAProjectInTheContextTheArtifactsButtonWillBeDisplayedInTheHeadersLeftSide" xml:space="preserve">
    <value>After selecting a project in the context, the "Artifacts" button will be displayed in the headers left side.</value>
  </data>
  <data name="afterSelectingAProjectInTheContextThePermissionsButtonWillBeDisplayedInTheHeadersLeftSide" xml:space="preserve">
    <value>After selecting a project in the context, the permissions button will be displayed in the header's left side.</value>
  </data>
  <data name="byClickingInTheIssueIdentifierItsDetailsCommentsAndAFormForAddingNewCommentsWillBeDisplayed" xml:space="preserve">
    <value>By clicking in the issue identifier, its details, comments and a form for adding new comments will be displayed.</value>
  </data>
  <data name="byClickingTheAddVersionButtonYouWillBeAbleToAddANewVersionOfTheRequirement" xml:space="preserve">
    <value>By clicking the "Add Version" button (plus sign in each row), you will be able to add a new version of the requirement.</value>
  </data>
  <data name="byPressingTheAddIssueButtonYouCanAddAnIssueToAnArtifact" xml:space="preserve">
    <value>By pressing the "Add Issue" button, you can add an issue to an artifact.</value>
  </data>
  <data name="canAddCommentAndConcludeIssues" xml:space="preserve">
    <value>Can add, comment and conclude issues</value>
  </data>
  <data name="canAddEditTranslateAndExcludePackagesAndArtifacts" xml:space="preserve">
    <value>Can add, edit, translate and exclude packages and artifacts</value>
  </data>
  <data name="canSeePackagesAndArtifactsDetails" xml:space="preserve">
    <value>Can see packages and artifacts details</value>
  </data>
  <data name="creatingANewRequirement" xml:space="preserve">
    <value>Creating a new requirement</value>
  </data>
  <data name="grantingPermissions" xml:space="preserve">
    <value>Granting permissions</value>
  </data>
  <data name="inThisPageItsAlsoPossibleToAddCommentAndConcludeIssuesRelatedToRequirements" xml:space="preserve">
    <value>In this page, it's also possible  to add, comment and conclude issues related to requirements.</value>
  </data>
  <data name="itsPossibleToGrantPermissionsByClickingTheGrantPermissionButtonTheManageProjectPermissionsPage" xml:space="preserve">
    <value>It's possible to grant permissions by clicking the "grant permission" button (plus sign) in the "Manage Project Permissions" page</value>
  </data>
  <data name="itWillLeadYouToTheManagePermissionsPageWhereItsPossibleToManageThePermissionsOfTheProjectsThatYouOwn" xml:space="preserve">
    <value>It will lead you to the "Manage Permissions Page", where it's possible to manage the permissions of the projects that you own.</value>
  </data>
  <data name="manageRequirementsIssues" xml:space="preserve">
    <value>Manage Requirements Issues</value>
  </data>
  <data name="manageRequirementsLinks" xml:space="preserve">
    <value>Manage Requirements Links</value>
  </data>
  <data name="permissionProfiles" xml:space="preserve">
    <value>Permission Profiles</value>
  </data>
  <data name="pressingItAListWithTheIssuesWillBeDisplayed" xml:space="preserve">
    <value>Pressing it, a list with the pending issues will be displayed.</value>
  </data>
  <data name="pressingTheCreateRequirementButtonInTheManageRequirementsScreenWillLeadYouToTheCreateRequirementForm" xml:space="preserve">
    <value>Pressing the "Create Requirement" Button, in the "Manage Requirements" screen, will lead you to the "Create Requirement" form.</value>
  </data>
  <data name="removeRequirements" xml:space="preserve">
    <value>Remove Requirements</value>
  </data>
  <data name="revokingPermissions" xml:space="preserve">
    <value>Revoking permissions</value>
  </data>
  <data name="theLinksAreAlwaysBidirectional" xml:space="preserve">
    <value>The links are always bidirectional.</value>
  </data>
  <data name="theManageLinksButtonWillOpenTheManageArtifactsLinksScreen" xml:space="preserve">
    <value>The "Manage Links" button (two arrows pointing in opposing directions in each row), will open the "Manage Artifacts Links" screen.</value>
  </data>
  <data name="thenItsNecessaryToSearchAnUserByNameOrEmailAndSelectTheProfile" xml:space="preserve">
    <value>then it's necessary to search for an user by name or email, and select the profile.</value>
  </data>
  <data name="theRequirementsButtonIsBeneathItWillLeadYouToTheManageRequirementsPageWhereItsPossibleToCreateEditManageLinksAndRemoveRequirements" xml:space="preserve">
    <value>The "Requirements" button, which is beneath the "Artifacts" Button, will lead you to the "Manage Requirements Page", where it's possible to create, manage its links, edit and remove requirements.</value>
  </data>
  <data name="theUserMustBeAlreadyRegisteredForThePermissionToBeGranted" xml:space="preserve">
    <value>The user must be already registered for the permission to be granted.</value>
  </data>
  <data name="toAddANewLinkPressTheAddLinkButtonSelectOneArtifactItsDetailsWillBeDisplayedAndPressAdd" xml:space="preserve">
    <value>To add a new link, press the "Add Link" button, select one artifact (its details will be displayed) and press the "Add" button.</value>
  </data>
  <data name="toPerformTheseActionsItsRequiredToBeTheProjectOwner" xml:space="preserve">
    <value>To perform these actions, it's required to be the project's owner.</value>
  </data>
  <data name="toPerformTheseActionsItsRequiredToHaveAnEditorPermissionInTheProjectOrToBeItsOwner" xml:space="preserve">
    <value>To perform these actions, it's required to have an "Editor Permission" in the project, or to be its owner.</value>
  </data>
  <data name="toRemoveALinkPressTheRemoveLinkButtonInTheLinksList" xml:space="preserve">
    <value>To remove a link, press the "Remove Link" button in the links list.</value>
  </data>
  <data name="toRemoveARequirementItsNecessaryToPressTheRemoveRequirementButtonAndConfirmTheAction" xml:space="preserve">
    <value>To remove a requirement, it's necessary to press the "Remove Requirement" button and confirm the action.</value>
  </data>
  <data name="toRevokeAPermissionYouMustPressTheRevokePermissionInTheManageProjectPermissionsScreenAndThenClickTheSaveButton" xml:space="preserve">
    <value>To revoke a permission, you must press the "Revoke Permission" button (trash) in the "Manage Project Permissions" screen and then  click the save button.</value>
  </data>
  <data name="whenAddingANewVersionOfARequirementWithTranslationsButNotUpdatingThem" xml:space="preserve">
    <value>When adding a new version of a requirement with translations, but not updating them</value>
  </data>
  <data name="whenThereArePendingIssuesForAnArtifactARedButtonWithAWarningWillBeDisplayedInTheRowAtTheLeftSide" xml:space="preserve">
    <value>When there are pending issues for an artifact, a red button with a warning sign will be displayed in each artifact row, at the left side.</value>
  </data>
  <data name="theDataStructureIsArrangedAsProjectContainsPackagesAndPackageContainsArtifacts" xml:space="preserve">
    <value>The data structure is arranged as: Project contains packages and package contains artifacts.</value>
  </data>
  <data name="thisWayToCreateAPackageItsNecessaryToHaveAProjectToLinkToItAndToCreateAnArtifactItsNecessaryToHaveAPackageToLinkToIt" xml:space="preserve">
    <value>This way, to create a package it's necessary to have a project toLink to it, and to create an artifact it's necessary to have a package to link to it.</value>
  </data>
</root>